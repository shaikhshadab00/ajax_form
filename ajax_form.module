<?php

/**
 * @file
 *
 * Implementation of Ajax custom form.
 */

function ajax_form_menu() {
  $items = array();

  $items['admin/config/magazine-settings'] = array(
		'title' => t('THE MAGAZINE GUIDE SETTINGS'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('ajax_form_magazine_admin_settings'),
		'access arguments' => array('access administration menu'),
		'type' => MENU_NORMAL_ITEM,
  );
  
  $items['ajax-form-autocomplete-engine'] = array(
		'page callback' => 'ajax_form_autocomplete_engine',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
	);

  return $items;
}

/**
 * Admin setting form  magazine page.
 */
function ajax_form_magazine_admin_settings($form, &$form_state) {

	$default_magazine_settings = array();
	$magazine_settings = variable_get('magazine_settings', $default_magazine_settings);

	// General  magazin page 
	$form['magazine_settings'] = array(
		'#type' => 'fieldset',
		'#title' => t(' Magazine Settings'),
		'#collapsible' => true,
		'#collapsed' => FALSE,
		'#tree' => TRUE,
		'#weight' => -1,
    );
	
	$magazine_setting_columns = array('a');
    foreach ($magazine_setting_columns as $key => $column) {
		// General  magazin page 
		$form['magazine_settings']["magazine_settings_{$column}"] = array(
			'#type' => 'fieldset',
			'#title' => " Magazine Settings {$column}",
			'#collapsible' => true,
			'#collapsed' => FALSE,
		);

		$form['magazine_settings']["magazine_settings_{$column}"]['left'] = array(
			'#type' => 'fieldset',
			'#title' => " Magazine Settings {$column} left",
			'#collapsible' => true,
			'#collapsed' => FALSE,
			'#prefix' => '<div style="width: 50%; float: left;">',
			'#suffix' => '</div>',
		);
		
		$form['magazine_settings']["magazine_settings_{$column}"]['right'] = array(
			'#type' => 'fieldset',
			'#title' => " Magazine Settings {$column} right",
			'#collapsible' => true,
			'#collapsed' => FALSE,
			'#prefix' => '<div style="width: 50%; float: left;">',
			'#suffix' => '</div>',
        );
        
        $field_numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);
		
		foreach($field_numbers as $field_number) {
			$which_column = 'left';
			if (in_array($field_number, array(2,3,7,10,12,15))) {
				$which_column = 'right';
			}
			$style = 'clear: both;';
			if (in_array($field_number, array(4,5,8,9,13,14))) {
				$style = 'width: 50%; float: left';
			}
			$form['magazine_settings']["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"] = array(
				'#title' => "{$column}{$field_number}",
				'#type' => 'fieldset',
				'#collapsible' => true,
				'#collapsed' => !$form_state['rebuild'],
				'#prefix' => '<div id="' . "magazine_settings_{$column}_{$column}{$field_number}" . '" style="' . $style. '">',
				'#suffix' => '</div>',
			);
			$form['magazine_settings']["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]['nid'] = array(
				'#type' => 'textfield',
				'#title' => "{$column}{$field_number} nid",
				'#default_value' => isset($magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]['nid']) ? $magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]['nid'] : '',
				'#description' => "Enter nid for {$column}{$field_number}",
				'#autocomplete_path' => 'ajax-form-autocomplete-engine',
				'#size' => 60,
				'#maxlength' => 99,
				'#resizable' => FALSE,
				'#ajax' => array(
					'callback' => 'ajax_form_magazine_admin_settings_auto_fill_callback',
					'wrapper' => "magazine_settings_{$column}_{$column}{$field_number}",
		  			'method' => 'replace',
		  			'effect' => 'fade',
				),
			);
			$form['magazine_settings']["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]['link'] = array(
				'#type' => 'textfield',
				'#title' => "{$column}{$field_number} link",
				'#default_value' => isset($magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]['link']) ? $magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]['link'] : '',
				'#description' => "Enter link for {$column}{$field_number}",
				'#size' => 60,
				'#maxlength' => 99,
				'#resizable' => FALSE,
			);
			$form['magazine_settings']["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]['type'] = array(
				'#type' => 'select',
				'#options' => array(
					'image' => "Image",
					'gallery' => "Image Gallery",
				),
				'#title' => "{$column}{$field_number} type",
				'#default_value' => isset($magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]['type']) ? $magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]['type'] : '',
				'#description' => "Select type {$column}{$field_number}",
			);
			switch ($field_number) {
				// Title field.
				case 1:
					$form['magazine_settings']["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["title"] = array(
						'#type' => 'textfield',
						'#title' => "{$column}{$field_number} Title",
						'#default_value' => isset($magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["title"]) ? $magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["title"] : '',
						'#description' => "Enter {$column}{$field_number} Title",
						'#size' => 60,
						'#maxlength' => 99,
						'#resizable' => FALSE,
					);
				  break;
				  // lead text, seprater text and seprater link.
				  case 2:
				  case 3:
				  case 6:
				  case 7:
				  case 8:
				  case 9:
				  case 10:
				  case 11;
				  case 12:
				  case 15:
				  case 16:
					$form['magazine_settings']["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["title"] = array(
						'#type' => 'textfield',
						'#title' => "{$column}{$field_number} Title",
						'#default_value' => isset($magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["title"]) ? $magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["title"] : '',
						'#description' => "Enter {$column}{$field_number} Title",
						'#size' => 60,
						'#maxlength' => 99,
						'#resizable' => FALSE,
					);
					$form['magazine_settings']["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["lead_text"] = array(
						'#type' => 'textfield',
						'#title' => "{$column}{$field_number} Lead Text",
						'#default_value' => isset($magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["lead_text"]) ? $magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["lead_text"] : '',
						'#description' => "Enter {$column}{$field_number} Lead Text",
						'#size' => 60,
						'#maxlength' => 99,
						'#resizable' => FALSE,
					);
					$form['magazine_settings']["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["seperation_text"] = array(
						'#type' => 'textfield',
						'#title' => "{$column}{$field_number} Seperation Text",
						'#default_value' => isset($magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["seperation_text"]) ? $magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["seperation_text"] : '',
						'#description' => "Enter {$column}{$field_number} Seperation Text",
						'#size' => 60,
						'#maxlength' => 99,
						'#resizable' => FALSE,
					);
					$form['magazine_settings']["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["seperation_link"] = array(
						'#type' => 'textfield',
						'#title' => "{$column}{$field_number} Seperation Link",
						'#default_value' => isset($magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["seperation_link"]) ? $magazine_settings["magazine_settings_{$column}"]["{$which_column}"]["{$column}{$field_number}"]["seperation_link"] : '',
						'#description' => "Enter {$column}{$field_number} Seperation Link",
						'#size' => 60,
						'#maxlength' => 99,
						'#resizable' => FALSE,
					);
				  break;
			}
		}
	}

	//dpm($form_state['values']['magazine_settings']);


	return system_settings_form($form);
	
}

/**
 * Ajax callback function to populate fields.
 */
function ajax_form_magazine_admin_settings_auto_fill_callback($form, &$form_state) {
	if(!empty($form_state['triggering_element']['#name']) && !empty($form_state['values']['magazine_settings'])) {
		$trigger_element_name = $form_state['triggering_element']['#name'];
		$magazine_setting_values = $form_state['values']['magazine_settings'];
		if (preg_match_all("/\[(.*?)\]/", $trigger_element_name, $matches)) {
			$matche = $matches[1];
			$trigger_nid = $magazine_setting_values[$matche[0]][$matche[1]][$matche[2]][$matche[3]];
			if(is_numeric($trigger_nid)) {
				$node = node_load($trigger_nid);
				
				// Link
				if (isset($magazine_setting_values[$matche[0]][$matche[1]][$matche[2]]['link']) && empty($magazine_setting_values[$matche[0]][$matche[1]][$matche[2]]['link'])) {
					$form['magazine_settings'][$matche[0]][$matche[1]][$matche[2]]['link']['#value'] = 'node/' . $node->nid;
				}

				// title
				if (isset($magazine_setting_values[$matche[0]][$matche[1]][$matche[2]]['title']) && empty($magazine_setting_values[$matche[0]][$matche[1]][$matche[2]]['title']) && isset($node->title)) {
					$form['magazine_settings'][$matche[0]][$matche[1]][$matche[2]]['title']['#value'] = substr($node->title, 0, 99);
				}

				// Lead Text
				if (isset($magazine_setting_values[$matche[0]][$matche[1]][$matche[2]]['lead_text']) && empty($magazine_setting_values[$matche[0]][$matche[1]][$matche[2]]['lead_text']) && isset($node->field_lead_text['und'])) {
					$form['magazine_settings'][$matche[0]][$matche[1]][$matche[2]]['lead_text']['#value'] = !empty($node->field_lead_text['und'][0]['value']) ? substr($node->field_lead_text['und'][0]['value'], 0, 99) : '';
				}

				// Seperation Text
				if (isset($magazine_setting_values[$matche[0]][$matche[1]][$matche[2]]['seperation_text']) && empty($magazine_setting_values[$matche[0]][$matche[1]][$matche[2]]['seperation_text'])) {
					$form['magazine_settings'][$matche[0]][$matche[1]][$matche[2]]['seperation_text']['#value'] = 'Shop Now';
				}

				// Seperation Link
				if (isset($magazine_setting_values[$matche[0]][$matche[1]][$matche[2]]['seperation_link']) && empty($magazine_setting_values[$matche[0]][$matche[1]][$matche[2]]['seperation_link'])) {
					$form['magazine_settings'][$matche[0]][$matche[1]][$matche[2]]['seperation_link']['#value'] = 'general-product-page/' . $node->nid;
				}
			}
		}

	}

	return $form['magazine_settings'][$matche[0]][$matche[1]][$matche[2]];
}

/**
 * callback function for ajax_form_autocomplete_engine
 */
function ajax_form_autocomplete_engine($text) {

	$matches = array(); 
	$query = db_select('node', 'n');
	$query->fields('n', array('title'));
	$query->fields('n', array('nid'));
	$query->condition('n.title', '%' . db_like($text) . '%', 'LIKE');
	$query->range(0, 20);
	$result = $query->execute();

	foreach ($result as $node) {
		$title_with_nid = check_plain($node->title) . ' (' . $node->nid . ')';
		$matches[$node->nid] = $title_with_nid; 
	} 
	
	drupal_json_output($matches);
}



/** Copy content from other site */

/**
 * Implements hook_form_FORM_ID_alter 
 */
function ajax_form_form_node_form_alter(&$form, &$form_state) { //dsm($form['#form_id']);
  if ($form['#form_id'] == 'article_listing_node_form') {
	  $enable = variable_get('copy_content_enable_article', '');
    $node = isset($form['#node']) ? $form['#node'] : '';
    // $node_type = isset($node->type) ? $node->type : ''; 
    // $allow_node_type = variable_get('copy_content_allow_node_type', '');
    // $allow_node_type = array_filter($allow_node_type);
  
    // This is a new node.
    if ((!isset($node->nid) || isset($node->is_new)) && $enable) {
    //if (in_array($node_type, $allow_node_type)) {
      $site_domain = isset($_GET['domain']) ? $_GET['domain'] : '';
      $site_domain_nid = isset($_GET['nid']) ? $_GET['nid'] : '';
      $domain_list = variable_get('copy_content_domain_list', '');
      $data = ajax_form_generate_get_content_from_other_domain($site_domain, $site_domain_nid);

      // Set title default value 
      if (!empty($data->title)) {
        $form['title']['#default_value'] = $data->title; 
      }

      // Set body default value 
      if (!empty($data->body)) {
        $form['body']['und'][0]['#default_value'] = $data->body; 
      }

      // Set lead text default value 
      if (!empty($data->lead_text)) {
        $form['field_lead_text']['und'][0]['value']['#default_value'] = $data->lead_text;
      }

      $form['copy_content_fieldset'] = array(
        '#type' => 'fieldset',
        '#title' => t('Copy content'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
        '#tree' => TRUE,
        '#weight' => -1,
        '#prefix' => '<div id="copy-content-wrapper">',
        '#suffix' => '</div>',
      );
      $form['copy_content_fieldset']['site_domain_select'] = array(
        '#type' => 'select',
        '#title' => t('Select site domain'),
        '#options' => ajax_form_generate_list_from_textarea_value($domain_list),
        '#default_value' => $site_domain,
        '#prefix' => '<div style="width: 50%; float: left; padding: 0px 20px;">',
        '#suffix' => '</div>',
      );
      $form['copy_content_fieldset']['site_domain_nid'] = array(
        '#type' => 'textfield',
        '#title' => 'Site Domain Nid',
        '#attributes' => array(
          ' type' => 'number', // insert space before attribute name :)
        ),
        '#default_value' => $site_domain_nid,
        '#prefix' => '<div style="width: 50%; float: left; padding: 0px 20px;">',
        '#suffix' => '</div>',
      );
      $form['copy_content_fieldset']['current_path_alias'] = array(
        '#type' => 'hidden',
        '#value' => drupal_get_path_alias(),
      );
      // $form['copy_content_fieldset']['copy_content_submit'] = array(
      //   '#type' => 'submit',
      //   '#value' => t('Copy content'),
      //   '#ajax' => array(
      //       'callback' => 'ajax_form_copy_content_ajax',
      //       'wrapper' => 'copy-content-wrapper',
      //       'effect' => 'fade',
      //   ),
      //   '#prefix' => '<div style="clear: both; padding: 0px 20px;">',
      //   '#suffix' => '</div>',
      // );
      $form['copy_content_fieldset']['copy_content_submit'] = array(
        '#type' => 'button',
        '#value' => t('Copy content'),
        '#limit_validation_errors' => array(),
        '#prefix' => '<div style="clear: both; padding: 0px 20px;">',
        '#suffix' => '</div>',
      );
      $form['#attached']['js'][] = array(
        'type' => 'inline',
        'data' => 'jQuery(document).ready(function () { 
          alert("Hello!"); 
          jQuery("#edit-copy-content-fieldset-copy-content-submit").click(function(){
            var domain = jQuery("#edit-copy-content-fieldset-site-domain-select").val(); 
            var nid = jQuery("#edit-copy-content-fieldset-site-domain-nid").val();
            if (domain && nid) {
              window.location =  window.location.pathname + "?domain=" + domain + "&nid=" + nid;
              return false;
            }
          }); 
        });',
        'scope' => 'footer',
        'group' => JS_THEME,
        'weight' => 5,
      );
    }
  }
}

/**
 * Ajax callback function copy content
 */
function ajax_form_copy_content_ajax($form, &$form_state) {
  $values = $form_state['values'];
  $current_path_alias = !empty($values['copy_content_fieldset']['current_path_alias']) ? ($values['copy_content_fieldset']['current_path_alias']) : ''; 
  $site_domain = !empty($values['copy_content_fieldset']['site_domain_select']) ? ($values['copy_content_fieldset']['site_domain_select']) : ''; 
  $site_domain_nid = !empty($values['copy_content_fieldset']['site_domain_nid']) ? ($values['copy_content_fieldset']['site_domain_nid']) : '';
  $commands = array();

  if (!empty($current_path_alias) && !empty($site_domain) && !empty($site_domain_nid)) {
    ctools_include('ajax');
    ctools_add_js('ajax-responder');
    ctools_ajax_command_redirect('url_path_without_base_url',0,array('query'=>array('param1'=>'value1')));            
    $commands[] = ctools_ajax_command_redirect($current_path_alias, 0, array('query'=>array('site-domain'=> $site_domain, 'site-domain-nid' => $site_domain_nid)));
  }

  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Helper function to generate list from textarea value
 * 
 * @param $textarea_value
 *  $Textarea value in key|value format
 * 
 * @return $list
 *  array of list
 */
function ajax_form_generate_list_from_textarea_value($textarea_value) {
  $list = array();

  if (!empty($textarea_value)) { 
    $textarea_value_exploaded_by_eol = explode(PHP_EOL, $textarea_value); 
    foreach($textarea_value_exploaded_by_eol as $value) {
      $textarea_value_exploaded_by_pipeline = explode('|', $value);
      if (isset($textarea_value_exploaded_by_pipeline[0])) {
        $key = $textarea_value_exploaded_by_pipeline[0];
        $val = isset($textarea_value_exploaded_by_pipeline[1]) ? $textarea_value_exploaded_by_pipeline[1] : $key;
        $list["{$key}"] = $val;
      }
    }
    if (!empty($list)) {
      array_unshift($list,"None");
      $a = array_map('trim', array_keys($list));
      $b = array_map('trim', $list);
      $list = array_combine($a, $b);
    }
  }

  return $list;
}

/**
 * Helper function to get content from other domain
 * 
 * @param $domain_name
 *  Name of the other domain
 * 
 * @param $domain_nid
 *  node id of other domain
 * 
 * @return $data
 *  array of node data
 */
 function ajax_form_generate_get_content_from_other_domain($domain_name, $domain_nid) {
    $data = array();    
    if (is_numeric($domain_nid) && !empty($domain_name)) {
      $domain_name = preg_replace('/\v(?:[\v\h]+)/', '', $domain_name);
      $domain_nid = preg_replace('/\v(?:[\v\h]+)/', '', $domain_nid);
      
      // From cms
      // if (strrpos($domain_name, 'http://bond:jamesbond@cms.') === false) {
      //   $domain_name = 'http://bond:jamesbond@cms.' . $domain_name;
      // }
      // From live
      if (strrpos($domain_name, 'https://www.') === false) {
        $domain_name = 'https://www.' . $domain_name;
      }
      if (strrpos($domain_name, '.com') === false) {
        $domain_name .= '.com';
      }

      $url = $domain_name .'/contentasjson/node/'. $domain_nid;
      $curlSession = curl_init();
      curl_setopt($curlSession, CURLOPT_SSL_VERIFYHOST, 0);
      curl_setopt($curlSession, CURLOPT_SSL_VERIFYPEER, 0);

      curl_setopt($curlSession, CURLOPT_URL, $url);
      curl_setopt($curlSession, CURLOPT_VERBOSE, true);
      curl_setopt($curlSession, CURLOPT_RETURNTRANSFER, true);

      curl_setopt($curlSession, CURLOPT_CONNECTTIMEOUT, 1);
      curl_setopt($curlSession, CURLOPT_TIMEOUT, 10);
      curl_setopt($curlSession, CURLOPT_HTTPHEADER, array('Content-type: application/hal+json'));

      $result = curl_exec($curlSession);
      curl_close($curlSession);

      $obj = json_decode($result);
      $data = !empty($obj[0]) ? $obj[0] : $data; 
    }

    return $data;
 }